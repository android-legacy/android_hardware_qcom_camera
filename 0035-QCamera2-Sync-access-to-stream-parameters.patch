From 35125dc47fe8324865600609ac196641530a67c7 Mon Sep 17 00:00:00 2001
From: Emilian Peev <epeevs@codeaurora.org>
Date: Mon, 14 Oct 2013 10:16:39 -0700
Subject: [PATCH 035/176] QCamera2: Sync access to stream parameters

- Both 'getParameter()' and 'setParameter()' in
  'QCameraStream' can be called from different
  contexts. They do share a parameter buffer and
  the access to it needs to be synchronized in
  order to avoid concurrency issues.

CRs-Fixed: 560898
Change-Id: Ic518915fb87088898ab2261abf5796a686e0d1c2
---
 QCamera2/HAL/QCameraStream.cpp | 6 ++++++
 QCamera2/HAL/QCameraStream.h   | 1 +
 2 files changed, 7 insertions(+)

diff --git a/QCamera2/HAL/QCameraStream.cpp b/QCamera2/HAL/QCameraStream.cpp
index 7d59127..8eb220f 100644
--- a/QCamera2/HAL/QCameraStream.cpp
+++ b/QCamera2/HAL/QCameraStream.cpp
@@ -193,6 +193,7 @@ QCameraStream::QCameraStream(QCameraAllocator &allocator,
     memset(&mCropInfo, 0, sizeof(cam_rect_t));
     memset(&m_MemOpsTbl, 0, sizeof(mm_camera_map_unmap_ops_tbl_t));
     pthread_mutex_init(&mCropLock, NULL);
+    pthread_mutex_init(&mParameterLock, NULL);
 }
 
 /*===========================================================================
@@ -207,6 +208,7 @@ QCameraStream::QCameraStream(QCameraAllocator &allocator,
 QCameraStream::~QCameraStream()
 {
     pthread_mutex_destroy(&mCropLock);
+    pthread_mutex_destroy(&mParameterLock);
 
     if (mStreamInfoBuf != NULL) {
         int rc = mCamOps->unmap_stream_buf(mCamHandle,
@@ -1078,6 +1080,7 @@ int32_t QCameraStream::unmapBuf(uint8_t buf_type, uint32_t buf_idx, int32_t plan
 int32_t QCameraStream::setParameter(cam_stream_parm_buffer_t &param)
 {
     int32_t rc = NO_ERROR;
+    pthread_mutex_lock(&mParameterLock);
     mStreamInfo->parm_buf = param;
     rc = mCamOps->set_stream_parms(mCamHandle,
                                    mChannelHandle,
@@ -1086,6 +1089,7 @@ int32_t QCameraStream::setParameter(cam_stream_parm_buffer_t &param)
     if (rc == NO_ERROR) {
         param = mStreamInfo->parm_buf;
     }
+    pthread_mutex_unlock(&mParameterLock);
     return rc;
 }
 
@@ -1104,6 +1108,7 @@ int32_t QCameraStream::setParameter(cam_stream_parm_buffer_t &param)
 int32_t QCameraStream::getParameter(cam_stream_parm_buffer_t &param)
 {
     int32_t rc = NO_ERROR;
+    pthread_mutex_lock(&mParameterLock);
     mStreamInfo->parm_buf = param;
     rc = mCamOps->get_stream_parms(mCamHandle,
                                    mChannelHandle,
@@ -1112,6 +1117,7 @@ int32_t QCameraStream::getParameter(cam_stream_parm_buffer_t &param)
     if (rc == NO_ERROR) {
         param = mStreamInfo->parm_buf;
     }
+    pthread_mutex_unlock(&mParameterLock);
     return rc;
 }
 
diff --git a/QCamera2/HAL/QCameraStream.h b/QCamera2/HAL/QCameraStream.h
index 8156f5b..c878e7f 100644
--- a/QCamera2/HAL/QCameraStream.h
+++ b/QCamera2/HAL/QCameraStream.h
@@ -119,6 +119,7 @@ private:
     cam_padding_info_t mPaddingInfo;
     cam_rect_t mCropInfo;
     pthread_mutex_t mCropLock; // lock to protect crop info
+    pthread_mutex_t mParameterLock; // lock to sync access to parameters
     bool mStreamBufsAcquired;
     bool m_bActive; // if stream mProcTh is active
     bool mDynBufAlloc; // allow buf allocation in 2 steps
-- 
1.8.3.1

