From 049c33e2976b0234dc91c89741006adfc339f118 Mon Sep 17 00:00:00 2001
From: satyavaraprasad yerramsetti <satyav@codeaurora.org>
Date: Wed, 23 Apr 2014 19:27:12 +0530
Subject: [PATCH 131/176] QCamera2/stack/mm-jpeg-interface: Enable/disable
 debug logs runtime

- Adds the property "persist.camera.logs". This chooses debug
log level and this will not affect the error logs
- 0: turns off CDBG and CDBG_HIGH logs
- 1: turns-on CDBG_HIGH logs
- 2: turns-on CDBG_HIGH and CDBG logs
- Defualt  value set to 1(CDBG_HIGH turn on)

Conflicts:
	QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c
Change-Id: Ida909b45eea88922acc22fc012649f46b5d98b1f
---
 QCamera2/stack/mm-jpeg-interface/inc/mm_jpeg_dbg.h       | 11 +++++++++--
 QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c           |  2 +-
 QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c      |  9 +++++----
 QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c |  8 ++++++++
 4 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/QCamera2/stack/mm-jpeg-interface/inc/mm_jpeg_dbg.h b/QCamera2/stack/mm-jpeg-interface/inc/mm_jpeg_dbg.h
index 26ec4e0..0e805e9 100644
--- a/QCamera2/stack/mm-jpeg-interface/inc/mm_jpeg_dbg.h
+++ b/QCamera2/stack/mm-jpeg-interface/inc/mm_jpeg_dbg.h
@@ -30,7 +30,14 @@
 #ifndef __MM_JPEG_DBG_H__
 #define __MM_JPEG_DBG_H__
 
+#include "cam_types.h"
+
 #define LOG_DEBUG
+/* Choose debug log level. This will not affect the error logs
+   0: turns off CDBG and CDBG_HIGH logs
+   1: turns-on CDBG_HIGH logs
+   2: turns-on CDBG_HIGH and CDBG logs */
+extern volatile uint32_t gMmCameraJpegLogLevel;
 
 #ifndef LOG_DEBUG
   #ifdef _ANDROID_
@@ -52,7 +59,7 @@
     #define LOG_NIDEBUG 0
     #define LOG_TAG "mm-jpeg-intf"
     #include <utils/Log.h>
-    #define CDBG(fmt, args...) ALOGE(fmt, ##args)
+    #define CDBG(fmt, args...) ALOGD_IF(gMmCameraJpegLogLevel >= 2, fmt, ##args)
   #else
     #include <stdio.h>
     #define CDBG(fmt, args...) fprintf(stderr, fmt, ##args)
@@ -61,7 +68,7 @@
 #endif
 
 #ifdef _ANDROID_
-  #define CDBG_HIGH(fmt, args...)  ALOGE(fmt, ##args)
+  #define CDBG_HIGH(fmt, args...)   ALOGD_IF(gMmCameraJpegLogLevel >= 1, fmt, ##args)
   #define CDBG_ERROR(fmt, args...)  ALOGE(fmt, ##args)
 #else
   #define CDBG_HIGH(fmt, args...) fprintf(stderr, fmt, ##args)
diff --git a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c
index fa0cab1..949e129 100644
--- a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c
+++ b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c
@@ -2553,7 +2553,7 @@ OMX_ERRORTYPE mm_jpeg_fbd(OMX_HANDLETYPE hComponent,
   int rc = 0;
   mm_jpeg_output_t output_buf;
   CDBG("%s:%d] count %d ", __func__, __LINE__, p_session->fbd_count);
-  ALOGE("[KPI Perf] : PROFILE_JPEG_FBD");
+  CDBG_HIGH("[KPI Perf] : PROFILE_JPEG_FBD");
 
   pthread_mutex_lock(&p_session->lock);
 
diff --git a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c
index 1f9fe3f..d2a5617 100644
--- a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c
+++ b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_exif.c
@@ -302,7 +302,7 @@ int process_sensor_data(cam_sensor_params_t *p_sensor_params,
     return 0;
   }
 
-  ALOGD("%s:%d] From metadata aperture = %f ", __func__, __LINE__,
+  CDBG_HIGH("%s:%d] From metadata aperture = %f ", __func__, __LINE__,
     p_sensor_params->aperture_value );
 
   val_rat.num = (uint32_t)(p_sensor_params->aperture_value * 100);
@@ -321,7 +321,7 @@ int process_sensor_data(cam_sensor_params_t *p_sensor_params,
 
   if (!p_cam_exif_params->flash_presence) {
     if (p_cam_exif_params->ui_flash_mode == CAM_FLASH_MODE_AUTO) {
-      ALOGD("%s %d: flashmode auto, take from sensor: %d", __func__, __LINE__,
+      CDBG_HIGH("%s %d: flashmode auto, take from sensor: %d", __func__, __LINE__,
         p_sensor_params->flash_mode);
       if(p_sensor_params->flash_mode == CAM_FLASH_MODE_ON)
         flash_fired = FLASH_FIRED;
@@ -330,7 +330,8 @@ int process_sensor_data(cam_sensor_params_t *p_sensor_params,
 
       flash_mode = CAMERA_FLASH_AUTO;
     } else {
-      ALOGD("%s %d: flashmode from ui: %d", __func__, __LINE__, p_cam_exif_params->ui_flash_mode);
+      CDBG_HIGH("%s %d: flashmode from ui: %d", __func__, __LINE__,
+                 p_cam_exif_params->ui_flash_mode);
       if (p_cam_exif_params->ui_flash_mode == CAM_FLASH_MODE_ON) {
         flash_mode = CAMERA_FLASH_COMPULSORY;
         flash_fired = FLASH_FIRED;
@@ -356,7 +357,7 @@ int process_sensor_data(cam_sensor_params_t *p_sensor_params,
     strobe_state | flash_mode |
     flash_presence | red_eye_mode;
 
-  ALOGD("%s %d: flash_tag: 0x%x", __func__, __LINE__, flash_tag);
+  CDBG_HIGH("%s %d: flash_tag: 0x%x", __func__, __LINE__, flash_tag);
 
 
   /*FLASH*/
diff --git a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c
index e60c493..d116e15 100644
--- a/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c
+++ b/QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c
@@ -33,6 +33,8 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <cutils/properties.h>
+#include <stdlib.h>
 
 #include "mm_jpeg_dbg.h"
 #include "mm_jpeg_interface.h"
@@ -43,6 +45,7 @@ static mm_jpeg_obj* g_jpeg_obj = NULL;
 
 static pthread_mutex_t g_handler_lock = PTHREAD_MUTEX_INITIALIZER;
 static uint16_t g_handler_history_count = 0; /* history count for handler */
+volatile uint32_t gMmCameraJpegLogLevel = 0;
 
 /** mm_jpeg_util_generate_handler:
  *
@@ -290,6 +293,11 @@ uint32_t jpeg_open(mm_jpeg_ops_t *ops, mm_dimension picture_size)
   int32_t rc = 0;
   uint32_t clnt_hdl = 0;
   mm_jpeg_obj* jpeg_obj = NULL;
+  char prop[PROPERTY_VALUE_MAX];
+
+  property_get("persist.camera.logs", prop, "1");
+  gMmCameraJpegLogLevel = atoi(prop);
+
 
   pthread_mutex_lock(&g_intf_lock);
   /* first time open */
-- 
1.8.3.1

