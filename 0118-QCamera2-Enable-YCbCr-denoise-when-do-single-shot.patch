From 40dbd342abe5d428d81de4af52f6156dcc82da6f Mon Sep 17 00:00:00 2001
From: chiz <chiz@codeaurora.org>
Date: Fri, 14 Mar 2014 17:13:47 +0800
Subject: [PATCH 118/176] QCamera2: Enable YCbCr denoise when do single shot

Check if HDR/AE_Braket/LongShot is enable, if not, enable
YCbCr denoise, if so, only denoise on Cb,Cr channels

Change-Id: I37d7c5dd080d9cd3ba351fa8b9225f98d8c3f8cf
CRs-fixed: 625914
---
 QCamera2/HAL/QCamera2HWI.cpp       | 21 +++++++++++++++++++++
 QCamera2/HAL/QCamera2HWI.h         |  1 +
 QCamera2/HAL/QCameraParameters.cpp | 36 +++++++++++++++++++++++++++++++++++-
 QCamera2/HAL/QCameraParameters.h   |  2 ++
 4 files changed, 59 insertions(+), 1 deletion(-)

diff --git a/QCamera2/HAL/QCamera2HWI.cpp b/QCamera2/HAL/QCamera2HWI.cpp
index ca75743..abd259a 100644
--- a/QCamera2/HAL/QCamera2HWI.cpp
+++ b/QCamera2/HAL/QCamera2HWI.cpp
@@ -2479,6 +2479,7 @@ int QCamera2HardwareInterface::sendCommand(int32_t command,
         // is not active.
         if ( !m_stateMachine.isCaptureRunning() ) {
             mLongshotEnabled = true;
+            rc = setLongShot(mLongshotEnabled);
 
             // Due to recent buffer count optimizations
             // ZSL might run with considerably less buffers
@@ -2509,6 +2510,7 @@ int QCamera2HardwareInterface::sendCommand(int32_t command,
                 }
             }
             //
+
         } else {
             rc = NO_INIT;
         }
@@ -2519,6 +2521,7 @@ int QCamera2HardwareInterface::sendCommand(int32_t command,
             processEvt(QCAMERA_SM_EVT_SNAPSHOT_DONE, NULL);
         }
         mLongshotEnabled = false;
+        rc = setLongShot(mLongshotEnabled);
         break;
     case CAMERA_CMD_HISTOGRAM_ON:
     case CAMERA_CMD_HISTOGRAM_OFF:
@@ -5165,6 +5168,24 @@ int32_t QCamera2HardwareInterface::setHistogram(bool histogram_en)
 }
 
 /*===========================================================================
+ * FUNCTION   : setLongShot
+ *
+ * DESCRIPTION: set if LongShot should be enabled
+ *
+ * PARAMETERS :
+ *   @longshot_en : bool flag if LongShot should be enabled
+ *
+ * RETURN     : int32_t type of status
+ *                   NO_ERROR  -- success
+ *                   none-zero failure code
+ *==========================================================================*/
+
+int32_t QCamera2HardwareInterface::setLongShot(bool longshot_en)
+{
+    return mParameters.setLongShot(longshot_en);
+}
+
+/*===========================================================================
  * FUNCTION   : setFaceDetection
  *
  * DESCRIPTION: set if face detection should be enabled
diff --git a/QCamera2/HAL/QCamera2HWI.h b/QCamera2/HAL/QCamera2HWI.h
index f5bcd42..9caf654 100644
--- a/QCamera2/HAL/QCamera2HWI.h
+++ b/QCamera2/HAL/QCamera2HWI.h
@@ -378,6 +378,7 @@ private:
     int32_t processFaceDetectionResult(cam_face_detection_data_t *fd_data);
     int32_t processHistogramStats(cam_hist_stats_t &stats_data);
     int32_t setHistogram(bool histogram_en);
+    int32_t setLongShot(bool longshot_en);
     int32_t setFaceDetection(bool enabled);
     int32_t prepareHardwareForSnapshot(int32_t afNeeded);
     bool needProcessPreviewFrame() {return m_stateMachine.isPreviewRunning();};
diff --git a/QCamera2/HAL/QCameraParameters.cpp b/QCamera2/HAL/QCameraParameters.cpp
index 449920b..f64e719 100644
--- a/QCamera2/HAL/QCameraParameters.cpp
+++ b/QCamera2/HAL/QCameraParameters.cpp
@@ -645,6 +645,7 @@ QCameraParameters::QCameraParameters(const String8 &params)
     m_bSnapshotFlipChanged(false),
     m_bFixedFrameRateSet(false),
     m_bHDREnabled(false),
+    m_bLongShotEnabled(false),
     m_bAVTimerEnabled(false),
     m_AdjustFPS(NULL),
     m_bHDR1xFrameEnabled(true),
@@ -5563,7 +5564,13 @@ cam_denoise_process_type_t QCameraParameters::getWaveletDenoiseProcessPlate()
 {
     char prop[PROPERTY_VALUE_MAX];
     memset(prop, 0, sizeof(prop));
-    cam_denoise_process_type_t processPlate = CAM_WAVELET_DENOISE_CBCR_ONLY;
+    cam_denoise_process_type_t processPlate = CAM_WAVELET_DENOISE_YCBCR_PLANE;
+
+    // Check if it's single shot, if not, only do chroma denoise
+    int numOfSnapshot = getInt(KEY_QC_NUM_SNAPSHOT_PER_SHUTTER);
+    if ((numOfSnapshot > 1) || (isHDREnabled()) || (m_bLongShotEnabled)) {
+        processPlate = CAM_WAVELET_DENOISE_CBCR_ONLY;
+    }
     property_get("persist.denoise.process.plates", prop, "");
     if (strlen(prop) > 0) {
         switch(atoi(prop)) {
@@ -6682,6 +6689,33 @@ int32_t QCameraParameters::updateRecordingHintValue(int32_t value)
 }
 
 /*===========================================================================
+ * FUNCTION   : setLongShot
+ *
+ * DESCRIPTION: Get notice if LongShot is enable
+ *
+ * PARAMETERS :
+ *   @enabled : if LongShot is enabled
+ *
+ * RETURN     : int32_t type of status
+ *              NO_ERROR  -- success
+ *              none-zero failure code
+ *==========================================================================*/
+int32_t QCameraParameters::setLongShot(bool enabled)
+{
+    int32_t rc = NO_ERROR;
+    if (m_bLongShotEnabled == enabled) {
+        ALOGV("%s: LongShot flag not changed, no ops here", __func__);
+        return NO_ERROR;
+    }
+
+    m_bLongShotEnabled = enabled;
+
+    ALOGD(" LongShot -> %s", m_bLongShotEnabled ? "Enabled" : "Disabled");
+
+    return rc;
+}
+
+/*===========================================================================
  * FUNCTION   : setHistogram
  *
  * DESCRIPTION: set histogram
diff --git a/QCamera2/HAL/QCameraParameters.h b/QCamera2/HAL/QCameraParameters.h
index e325ed0..3559fc8 100644
--- a/QCamera2/HAL/QCameraParameters.h
+++ b/QCamera2/HAL/QCameraParameters.h
@@ -491,6 +491,7 @@ public:
     bool isHistogramEnabled() {return m_bHistogramEnabled;};
     bool isFaceDetectionEnabled() {return ((m_nFaceProcMask & CAM_FACE_PROCESS_MASK_DETECTION) != 0);};
     int32_t setHistogram(bool enabled);
+    int32_t setLongShot(bool enabled);
     int32_t setFaceDetection(bool enabled);
     int32_t setFrameSkip(enum msm_vfe_frame_skip_pattern pattern);
     qcamera_thermal_mode getThermalMode() {return m_ThermalMode;};
@@ -721,6 +722,7 @@ private:
     cam_dimension_t m_LiveSnapshotSize; // live snapshot size
     cam_dimension_t m_rawSize; // live snapshot size
     bool m_bHDREnabled;             // if HDR is enabled
+    bool m_bLongShotEnabled;
     bool m_bAVTimerEnabled;    //if AVTimer is enabled
     QCameraAdjustFPS *m_AdjustFPS;
     bool m_bHDR1xFrameEnabled;          // if frame with exposure compensation 0 during HDR is enabled
-- 
1.8.3.1

