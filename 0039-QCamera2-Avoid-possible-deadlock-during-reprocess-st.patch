From cc10a30098dbcb6407f612bb1aa96cd347489aaf Mon Sep 17 00:00:00 2001
From: Emilian Peev <epeevs@codeaurora.org>
Date: Wed, 23 Oct 2013 08:53:43 -0700
Subject: [PATCH 039/176] QCamera2: Avoid possible deadlock during reprocess
 stop

- A deadlock is possible when stream parameters
  are retrieved by the post-processor channel callback
  method. This method is executed within the context
  of channel callback thread in the interface library.
  If we try to stop this channel before this callback
  thread acquires the channel lock the stop sequence
  for the channel will block waiting for the callback
  thread to exit.

Change-Id: I1a9b587504ee54b84b8b2742664ab9e05870032b
CRs-Fixed: 565545
---
 QCamera2/HAL/QCameraStream.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/QCamera2/HAL/QCameraStream.cpp b/QCamera2/HAL/QCameraStream.cpp
index 8eb220f..1277cca 100644
--- a/QCamera2/HAL/QCameraStream.cpp
+++ b/QCamera2/HAL/QCameraStream.cpp
@@ -1108,6 +1108,12 @@ int32_t QCameraStream::setParameter(cam_stream_parm_buffer_t &param)
 int32_t QCameraStream::getParameter(cam_stream_parm_buffer_t &param)
 {
     int32_t rc = NO_ERROR;
+
+    if (!m_bActive) {
+        ALOGE("%s : Stream not stopped!", __func__);
+        return NO_INIT;
+    }
+
     pthread_mutex_lock(&mParameterLock);
     mStreamInfo->parm_buf = param;
     rc = mCamOps->get_stream_parms(mCamHandle,
-- 
1.8.3.1

