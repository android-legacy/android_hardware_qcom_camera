From 682f6404768e87d54711e4cd6e292660132f5fe4 Mon Sep 17 00:00:00 2001
From: Abhishek Kondaveeti <akondave@codeaurora.org>
Date: Sun, 22 Dec 2013 03:43:01 +0530
Subject: [PATCH 079/176] mm-camera-test: Fixing the Snapshot Crash.

Implementing the metadata callback for the mm-camera-test
app so that we will get valid metadata in eztune.

CRs-Fixed: 594220
Change-Id: I695876c7492665c66579d0a7065f664ff9a94844
---
 .../stack/mm-camera-test/src/mm_qcamera_preview.c  |  6 +-
 .../stack/mm-camera-test/src/mm_qcamera_snapshot.c | 73 +++++++++++++++++++++-
 2 files changed, 76 insertions(+), 3 deletions(-)

diff --git a/QCamera2/stack/mm-camera-test/src/mm_qcamera_preview.c b/QCamera2/stack/mm-camera-test/src/mm_qcamera_preview.c
index b8a0115..3ac9eca 100644
--- a/QCamera2/stack/mm-camera-test/src/mm_qcamera_preview.c
+++ b/QCamera2/stack/mm-camera-test/src/mm_qcamera_preview.c
@@ -70,7 +70,11 @@ static void mm_app_metadata_notify_cb(mm_camera_super_buf_t *bufs,
       CDBG_ERROR("%s: cannot find metadata stream", __func__);
       return;
   }
-  pme->metadata = frame->buffer;
+  if (pme->metadata == NULL) {
+    /* The app will free the meta data, we don't need to bother here */
+    pme->metadata = malloc(sizeof(cam_metadata_info_t));
+  }
+  memcpy(pme->metadata, frame->buffer, sizeof(cam_metadata_info_t));
 
   pMetadata = (cam_metadata_info_t *)frame->buffer;
 
diff --git a/QCamera2/stack/mm-camera-test/src/mm_qcamera_snapshot.c b/QCamera2/stack/mm-camera-test/src/mm_qcamera_snapshot.c
index d3c9606..5f0b7d5 100644
--- a/QCamera2/stack/mm-camera-test/src/mm_qcamera_snapshot.c
+++ b/QCamera2/stack/mm-camera-test/src/mm_qcamera_snapshot.c
@@ -165,6 +165,75 @@ int createEncodingSession(mm_camera_test_obj_t *test_obj,
                                              &test_obj->current_jpeg_sess_id);
 }
 
+/** mm_app_snapshot_metadata_notify_cb
+ *  @bufs: Pointer to super buffer
+ *  @user_data: Pointer to user data
+ *
+ *
+ **/
+static void mm_app_snapshot_metadata_notify_cb(mm_camera_super_buf_t *bufs,
+  void *user_data)
+{
+  int i = 0;
+  mm_camera_channel_t *channel = NULL;
+  mm_camera_stream_t *p_stream = NULL;
+  mm_camera_test_obj_t *pme = (mm_camera_test_obj_t *)user_data;
+  mm_camera_buf_def_t *frame = bufs->bufs[0];
+  cam_metadata_info_t *pMetadata;
+  cam_auto_focus_data_t *focus_data;
+
+  /* find channel */
+  for (i = 0; i < MM_CHANNEL_TYPE_MAX; i++) {
+    if (pme->channels[i].ch_id == bufs->ch_id) {
+      channel = &pme->channels[i];
+      break;
+    }
+  }
+  /* find preview stream */
+  for (i = 0; i < channel->num_streams; i++) {
+    if (channel->streams[i].s_config.stream_info->stream_type == CAM_STREAM_TYPE_METADATA) {
+      p_stream = &channel->streams[i];
+      break;
+    }
+  }
+  /* find preview frame */
+  for (i = 0; i < bufs->num_bufs; i++) {
+    if (bufs->bufs[i]->stream_id == p_stream->s_id) {
+      frame = bufs->bufs[i];
+      break;
+    }
+  }
+
+  if (NULL == p_stream) {
+    CDBG_ERROR("%s: cannot find metadata stream", __func__);
+    return;
+  }
+  if (!pme->metadata) {
+    /* The app will free the metadata, we don't need to bother here */
+    pme->metadata = malloc(sizeof(cam_metadata_info_t));
+  }
+  memcpy(pme->metadata , frame->buffer, sizeof(cam_metadata_info_t));
+
+  pMetadata = (cam_metadata_info_t *)frame->buffer;
+
+  if (pMetadata->is_focus_valid) {
+    focus_data = (cam_auto_focus_data_t *)&(pMetadata->focus_data);
+
+    if (focus_data->focus_state == CAM_AF_FOCUSED) {
+      CDBG_ERROR("%s: AutoFocus Done Call Back Received\n",__func__);
+      mm_camera_app_done();
+    }
+  }
+
+  if (MM_CAMERA_OK != pme->cam->ops->qbuf(bufs->camera_handle,
+                                          bufs->ch_id,
+                                          frame)) {
+    CDBG_ERROR("%s: Failed in Preview Qbuf\n", __func__);
+  }
+  mm_app_cache_ops((mm_camera_app_meminfo_t *)frame->mem_info,
+                   ION_IOC_INV_CACHES);
+}
+
 static void mm_app_snapshot_notify_cb_raw(mm_camera_super_buf_t *bufs,
                                           void *user_data)
 {
@@ -521,8 +590,8 @@ int mm_app_start_capture(mm_camera_test_obj_t *test_obj,
     }
     s_metadata = mm_app_add_metadata_stream(test_obj,
                                             channel,
-                                            NULL,
-                                            NULL,
+                                            mm_app_snapshot_metadata_notify_cb,
+                                            (void *)test_obj,
                                             CAPTURE_BUF_NUM);
      if (NULL == s_metadata) {
         CDBG_ERROR("%s: add metadata stream failed\n", __func__);
-- 
1.8.3.1

